/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package blazmass;

import blazmass.io.SearchParamReader;

import java.io.File;
import java.util.*;

/**
 *
 * @author robin
 */
public class Test {
    public static void main(String[] args) throws Exception {

        long start = System.currentTimeMillis();
        String[] sArr = new String[6000000];

        for(int i=0;i<sArr.length;i++)
            sArr[i] = "aaaaaaaaaaaaaaa";


        String st;

        for(int i=600000;i<1000000;i++)
           st= sArr[i]; //System.out.println(sArr[10000]);


        System.out.println(System.currentTimeMillis() -start);

        /*
        List<String> indexFileList = new ArrayList<String>();

        indexFileList.add("/data/2/rpark/ip2_data//rpark/test2/test_2015_11_10_15_78104/search/projects2016_03_29_21_95555/HIndexsearch.xml");
        indexFileList.add("/data/2/rpark/ip2_data//rpark/test2/test_2015_11_10_15_78104/search/projects2016_03_29_21_95555/MIndexsearch.xml");
        indexFileList.add("/data/2/rpark/ip2_data//rpark/test2/test_2015_11_10_15_78104/search/projects2016_03_29_21_95555/Indexsearch.xml");
        File indexFile;

        for(Iterator<String> itr=indexFileList.iterator(); itr.hasNext(); ) {
            String each = itr.next();
            System.out.println("aaaaaaaaaa\t"  + each);
            String path = each.substring(0, each.lastIndexOf(File.separator));
            String pName = each.substring(each.lastIndexOf(File.separator)+1);
            System.out.println("aaaaaaaaaa\t"  + path + " " + pName);

            blazmass.io.SearchParamReader paramReader = new blazmass.io.SearchParamReader(path, pName);

            System.out.println("================\t" + paramReader.getSearchParams().getFullFileNameWithNoIndex());
            //  indexFile = new File(paramReader.getSearchParams().getFullFileNameWithNoIndex());


        }

        */
        /*
        Blazmass b = new Blazmass();
        String[] mass="114.7361:115.0866:120.0812:120.0875:122.0811:127.0500:127.0862:129.0654:129.0744:129.1024:130.0864:130.1056:131.0811:131.0894:133.0425:136.0757:136.0834:141.0652:141.1019:143.0815:143.1180:143.1262:145.0599:147.1128:155.0805:157.0969:157.1328:158.0916:159.0650:159.0758:159.0900:167.0556:167.0807:169.0961:169.1329:171.0760:171.1125:172.0705:173.0553:173.0913:173.1275:175.1057:175.1190:176.1216:177.1021:181.0961:183.1125:183.1474:184.1074:185.0559:185.0907:185.1273:185.1638:186.0878:186.1226:187.1063:187.1435:189.0862:195.0763:197.1299:198.0868:199.0931:199.1079:199.1798:200.1012:200.1381:201.0868:201.1219:203.0647:212.1016:213.0857:213.1237:213.1579:214.1171:215.1378:216.0959:217.0806:218.1481:219.0777:219.1140:223.1086:225.1217:226.0819:226.1169:227.1025:227.1744:228.1016:228.1328:230.1136:230.1338:230.1488:231.0957:232.1401:239.0937:240.1329:242.1125:242.1485:242.1847:243.1083:243.1306:244.1277:244.1644:245.0760:245.1109:245.1946:246.1789:247.1105:248.1610:250.1196:255.1085:256.2021:256.2228:257.1249:257.1557:258.1067:258.1443:260.1948:261.1565:267.1090:268.1279:269.1234:270.1423:271.1397:272.1227:272.1671:273.1192:276.0984:276.1552:283.1379:283.1686:284.1219:284.1935:285.1577:286.1378:287.1343:287.1694:288.1245:288.1551:288.1830:288.2009:288.2277:289.1552:294.1416:298.1390:299.0592:299.1353:300.1186:300.1523:301.1516:301.1838:302.1321:302.1657:303.2013:304.1577:307.1410:311.1723:312.1535:312.4215:313.1500:313.1836:316.1613:323.1709:325.1845:327.1299:328.1952:331.1588:331.2324:337.1844:341.1427:341.1797:341.2160:342.1329:343.1956:344.1523:355.0677:355.1563:355.1991:356.0636:356.1932:359.1538:371.1932:373.2082:373.2801:374.2113:383.1885:386.1630:386.2071:387.1569:389.2419:396.2245:398.1631:402.2696:404.1571:412.2131:413.2024:414.1923:416.2883:419.3130:422.2409:424.1812:425.1974:432.2064:442.1929:443.1922:444.2537:452.2104:454.2316:457.6909:460.2032:461.2042:468.2746:469.2412:470.2166:471.6866:472.1953:472.2533:485.2687:486.2924:487.2867:496.2377:498.2135:502.2523:502.7545:508.2672:513.2671:514.2477:515.3468:517.2507:523.2503:524.2483:526.2575:531.2716:532.2291:537.8073:539.2822:540.2868:541.2614:542.2579:545.2219:545.7214:546.2231:550.2897:554.2859:556.3032:557.3045:559.2733:560.2710:561.2548:565.4178:569.2930:570.8364:571.3423:571.8339:572.3534:579.2751:586.8322:587.3283:588.3207:589.3125:597.2881:598.2952:600.3549:600.8203:601.3490:602.3809:605.3214:614.2758:616.3022:617.3354:618.3218:619.3062:623.2978:624.2869:627.2473:627.7548:627.8547:628.3553:633.3141:637.3653:637.8634:638.3531:639.3137:640.2911:640.8101:642.3038:643.3124:645.2792:645.8377:646.3340:646.8363:652.3516:660.3177:661.3137:662.7719:665.8388:666.3420:668.3339:668.8425:669.3443:673.3308:677.3415:681.3538:683.3868:684.8817:685.3724:685.8799:688.8401:691.8778:692.3790:692.8734:693.3620:694.3284:695.3397:696.3649:696.8655:697.3796:697.8699:698.3588:698.8672:699.3670:701.4018:701.8837:702.3966:702.8773:727.3469:730.3956:734.3822:736.4086:737.4075:737.9112:738.3202:738.4026:738.6825:739.0245:740.3481:741.3654:742.4102:742.9122:749.3467:750.3543:751.3725:754.8961:755.4039:755.9045:756.3843:759.3684:759.8615:760.4647:761.2963:761.4506:762.3759:762.8815:763.3722:763.9133:764.4136:764.9097:767.3749:768.3809:771.3359:772.9111:773.4152:774.3586:775.3167:775.8501:776.3717:779.3730:780.3672:781.0206:781.3380:783.3569:783.8386:784.3565:784.8709:785.3759:786.3939:787.4389:788.4313:790.3628:794.4109:794.9119:795.4219:795.9097:797.8719:800.4604:804.3950:806.4149:806.9046:807.4280:807.9348:808.4283:810.3634:815.3937:815.4969:815.7338:815.9167:816.4285:816.9387:817.4379:827.4194:844.4603:845.4593:846.4418:857.4604:859.4518:861.4961:866.4268:874.3786:895.3886:901.5307:902.4522:903.4403:908.4402:922.4429:923.4550:944.4164:945.4399:946.4775:948.4899:951.4178:959.4257:960.5733:972.5592:973.5645:976.4703:979.4883:980.4926:987.5139:988.5114:989.5085:1015.5398:1016.5325:1025.6012:1026.0767:1026.5717:1030.5458:1032.5197:1050.4958:1051.5325:1073.6052:1074.6102:1075.5765:1084.6151:1087.5037:1091.4962:1093.4518:1097.4955:1098.5543:1099.5778:1100.5658:1101.6082:1104.5376:1105.5320:1110.5688:1111.5406:1116.5071:1120.5172:1121.5265:1128.5701:1136.5662:1140.6672:1141.6697:1146.5819:1147.5841:1148.5530:1172.6769:1173.6733:1174.6560:1184.5662:1191.5621:1199.6384:1200.6130:1213.5424:1224.5942:1228.5479:1229.5505:1231.6797:1232.6356:1241.6617:1242.6636:1244.5579:1245.5737:1259.6685:1260.6692:1261.6765:1273.7192:1274.7178:1277.6110:1281.6272:1300.5795:1343.6566:1344.6570:1345.6613:1347.7067:1348.7141:1357.6453:1387.6206:1402.7715:1473.7836:1485.7457:1486.7126:".split(":");
        String[] intensity="015000:024220:096050:08560:013760:09550:019030:013250:06390:0425441:0129780:023411:067101:07741:012210:098090:08710:010350:021330:023560:085650:08430:09870:0372010:051920:017330:022040:011530:012170:0165290:025520:07900:014980:016910:016830:011400:019100:014180:08630:019550:052440:07990:0191991:010221:010891:019170:010580:016930:013000:010880:066941:027850:016860:012301:057200:09161:017110:024030:09840:011020:012430:08570:0137071:021610:015951:015670:0107171:066161:013850:070050:029190:014530:013240:076830:065570:017400:023810:013090:09440:055120:09120:010890:013600:065450:0251681:018010:015751:030220:0280330:016950:091590:016820:012230:012990:052660:018010:025420:029390:030840:020680:014580:019820:013330:015620:09400:016020:020300:042640:09600:095680:0111690:015600:09090:09770:053680:091980:025160:010460:011700:011780:012680:018610:017600:018940:021640:08710:011650:0110850:055710:010320:056270:047850:012020:015300:012500:014740:011890:0181940:013230:077440:010320:013690:012240:014010:010750:010240:013670:015360:023390:012170:067170:012780:027740:016670:017400:013830:016240:012860:018640:013500:020460:018020:023030:013790:010510:059520:014490:021620:069391:029070:016040:017831:022780:062500:028080:018330:0140061:013570:010961:0183420:017630:02349121:065630:0301811:026280:020540:021040:047390:013450:044150:016070:016760:017990:056301:049521:046261:013260:014530:018810:0109590:011010:021170:0269981:051381:021660:013500:015610:018700:0251631:051641:015480:014120:013060:025540:036050:068150:066160:0317421:052891:013500:019770:046832:014462:018890:051090:018540:016330:014790:095901:015041:020650:022070:015660:016560:098450:013580:0289881:078701:056582:028772:026462:019310:016620:071551:052461:0187491:055621:015271:019240:017190:0186272:087572:016582:025832:014290:024530:018281:092181:022271:014970:024070:0229320:020950:048010:026590:016840:019420:0110240:0180581:056871:016311:020881:061831:050400:016110:083352:087802:017380:0325122:0165772:054072:017340:017780:017660:0146161:019391:015950:0150792:048922:016782:021460:0131011:050701:025490:048202:026842:074792:054152:021892:017290:023570:024940:044080:090482:027932:021332:016220:096462:019742:051672:026362:023110:019890:026810:065492:095762:0134302:092292:028452:028052:0467530:0173660:0196340:051100:018820:062730:023190:046150:0323572:0194502:021630:025332:050700:020160:026010:050910:0189682:095052:017710:028190:018420:081412:0197932:0103452:019782:024510:020630:0105151:022320:051541:017550:068600:071790:0676202:0608942:0148452:084051:036431:017550:025080:019070:026000:028630:023750:020850:023570:077820:026350:058210:053480:068690:0132080:0123700:027970:021530:0135911:0114621:028500:0118812:026252:094132:065882:023850:079330:022820:094860:0209240:0434092:0278352:0135512:026040:0859400:0727820:043860:01512652:06411332:04397902:01545172:022770:0651441:0282831:066821:021140:021570:048440:022140:023630:021370:091790:098401:053591:029280:065750:043100:049510:025740:047170:025000:098160:025010:026400:0295051:0157131:025840:058461:024081:052511:074291:026011:0193681:072201:0118420:090440:052030:049500:024220:0101490:028340:0773861:0348231:079041:047300:024620:063130:055110:023880:051251:0149531:070961:096771:052051:024301:026540:075100:053060:048661:054861:052220:056400:0216751:0137771:0255881:0136961:064561:0300191:0148891:028581:022220:042320:025550:052030:057340:027350:053061:052231:0101080:055120:0111381:082421:059690:024770:0651761:0312601:099701:0254771:0147791:024090:051200:026910:059671:049061:057781:051741:028091:027130:099510:098080:045680:080580:029990:".split(":");
        List<Float> masses = new ArrayList<Float>();
        List<Float> intensities = new ArrayList<Float>();

        for(int i=0;i<mass.length;i++) {
            masses.add(Float.parseFloat(mass[i]));
            intensities.add(Float.parseFloat(intensity[i]));
        }
*/
            
//    public List<Float> getMatchedIonList(String sequence, float precursorMass, int chargeState, String path) throws Exception {

        //List<Float> ionList = b.getMatchedIonList(masses, intensities, "FLPLFDR", 907.50305f, 2, "/data/2/rpark/ip2_data//rpark/Jolene_QE_data/QE2_HEK20ug_25_0_vented_to_improve_2013_01_11_10_13550/search/blazmass2013_02_11_18_38167");
        //System.out.println(ionList);
    }
}
